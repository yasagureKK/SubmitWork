//=============================================================================
// パーティクル処理 [particle.h]
// Author : 草刈 翔
//=============================================================================
#ifndef _PARTICLE_H_
#define _PARTICLE_H_

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_PARTICLE (300)	// 1度に同時に出せるパーティクルの最大数

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CScene;

//*****************************************************************************
// クラスの定義
//*****************************************************************************
class CParticle
{
public:
	CParticle();								// コンストラクタ
	virtual ~CParticle();						// デストラクタ
	virtual HRESULT Init(D3DXVECTOR3 pos,
		D3DXVECTOR3 size) = 0;					// 初期化処理
	virtual void Uninit(void) = 0;				// 終了処理
	virtual void Update(void) = 0;				// 更新処理
	D3DXVECTOR3 GetMove(void);					// 移動量の取得処理

protected:
	D3DXVECTOR3 m_move;							// 移動量
};

#endif	//_PARTICLE_H_