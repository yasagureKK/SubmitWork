//=============================================================================
// UI処理 [ui.h]
// Author : 草刈 翔
//=============================================================================
//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "ui.h"
#include "manager.h"
#include "texture.h"
#include "scene.h"
#include "control.h"
#include "control_ui_title_enter.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CUI::CUI(int nPriority) :CScene2D(nPriority)
{
	// 変数のクリア
	m_pos = D3DXVECTOR2(0.0f, 0.0f);
	m_pControl = NULL;
}

//=============================================================================
// デストラクタ
//=============================================================================
CUI::~CUI()
{

}

//=============================================================================
//初期化処理
//=============================================================================
HRESULT CUI::Init(D3DXVECTOR2 pos, D3DXVECTOR2 size, int nType, D3DXCOLOR col)
{
	CScene2D::Init(D3DXVECTOR3(pos.x, pos.y, 0.0f));

	// 位置の設定
	m_pos = pos;

	CScene2D::SetSize(size);
	CScene2D::BindTexture(nType);
	CScene2D::SetColor(col);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CUI::Uninit(void)
{
	if (m_pControl != NULL)
	{
		m_pControl->Uninit();
	}

	// 継承元クラスの終了処理
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CUI::Update(void)
{
	// コントロールクラスがヌルじゃなかったら
	if (m_pControl != NULL)
	{
		// 自身のポインタを入れ、更新処理
		m_pControl->Update(this);

		// Scene2Dから位置。サイズを取得
		D3DXVECTOR3 pos;
		pos = GetPos();

		// 取得した位置に移動量を加算
		pos += m_pControl->GetMove();

		SetPos(pos);
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void CUI::Draw(void)
{
	// 継承元クラスの描画処理
	CScene2D::Draw();
}

//=============================================================================
// 生成処理
//=============================================================================
CUI* CUI::Create(D3DXVECTOR2 pos, D3DXVECTOR2 size, int nType, D3DXCOLOR col)
{
	// クラスの生成
	CUI *pUi = NULL;
	pUi = new CUI(PRIORITY_UI);

	if (pUi != NULL)
	{
		if (nType == 2)
		{
			pUi->m_pControl = CControlUiTitleEnter::Create();
		}

		// 初期化処理
		pUi->Init(pos, size, nType, col);
	}
	return pUi;
}