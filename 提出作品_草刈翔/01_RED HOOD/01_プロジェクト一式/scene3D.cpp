//=============================================================================
// 3Dオブジェクト処理 [scene3D.cpp]
// Author : 草刈 翔
//=============================================================================
//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "scene3D.h"
#include "manager.h"
#include "renderer.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CScene3D::CScene3D(int nPriority) : CScene(nPriority)
{
	// 変数のクリア
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_rot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
}

//=============================================================================
// デストラクタ
//=============================================================================
CScene3D::~CScene3D()
{

}

//================================================
// 初期化処理
//================================================
HRESULT CScene3D::Init(D3DXVECTOR3 pos)
{
	return S_OK;
}

//================================================
// 終了処理
//================================================
void CScene3D::Uninit(void)
{
	// オブジェクトの破棄
	Release();
}

//================================================
// 更新処理
//================================================
void CScene3D::Update(void)
{

}

//================================================
// 描画処理
//================================================
void CScene3D::Draw(void)
{
	
}

//================================================
// 生成処理
//================================================
CScene3D* CScene3D::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, D3DXVECTOR3 rot, int nPriolity)
{
	// クラスの生成
	CScene3D *pScene3D = NULL;
	pScene3D = new CScene3D(nPriolity);

	if (pScene3D != NULL)
	{
		// 変数の初期化
		pScene3D->m_rot = rot;

		// 初期化処理
		pScene3D->Init(pos);
	}
	return pScene3D;
}